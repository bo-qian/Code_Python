# Phase-field parametersInput
Alpha: 17.64102564
Beta: 1.0
Kappac: 19.84615385
KappaEta: 6.75
Surface Diffusion: 10.36
GB Diffusion: 0.8
Volume Diffusion: 0.08
Mobility L: 0.069333333
Epsilon: 3.01

# Mechanics Parameters
Surface viscosity: 0.0
GB viscosity: 0.0
Bulk viscosity: 5000.0
Viscosity Ratio: 0.0001
 
# Computational Setting
Particle Radius: 45.0
Particle Number: 2
Characteristic time: 7200.0
Dimension X: 200.0
Dimension Y: 110.0
NumberOfElement X: 100
NumberOfElement Y: 55
TimeStep: 0.03
InitialTime: 0.0
NumberOfTimeStep: 240000
IntialStepCounter: 0
FrequencyOutPut: 2000
 
# Algorithmic parameters
theta: 0.5
 
# Normalized Materials Properties
specfic surface energy: 4.410256410555555
surface thickness: 3.000000000377907
Grain boundary thickness: 3.0
Calling FFC just-in-time (JIT) compiler, this may take some time.
Compiling element ffc_element_7083d11975a2753c345e7e415e38ff0e4a628988

Compiler stage 1: Analyzing element(s)
--------------------------------------
  
Compiler stage 1 finished in 0.000145197 seconds.

Compiler stage 2: Computing intermediate representation
-------------------------------------------------------
  Computing representation of 1 elements
  Computing representation of 1 dofmaps
  Computing representation of 0 coordinate mappings
  Computing representation of integrals
  Computing representation of forms
  
Compiler stage 2 finished in 0.077503 seconds.

Compiler stage 3: Optimizing intermediate representation
--------------------------------------------------------
  Skipping optimizations, add -O or attach {'optimize': True} metadata to integrals
  
Compiler stage 3 finished in 0.000119209 seconds.

Compiler stage 4: Generating code
---------------------------------
  Generating code for 1 finite_element(s)
  Generating code for 1 dofmap(s)
  Generating code for 0 coordinate_mapping(s)
  Generating code for integrals
  Generating code for forms
  
Compiler stage 4 finished in 0.0195994 seconds.

Compiler stage 4.1 finished in 1.90735e-06 seconds.

Compiler stage 5: Formatting code
---------------------------------
  
Compiler stage 5 finished in 0.000350952 seconds.

FFC finished in 0.0979238 seconds.
Calling FFC just-in-time (JIT) compiler, this may take some time.
Compiling element ffc_element_2d4ff644b3dd83803fb1e898ba9f33b754e32fa8

Compiler stage 1: Analyzing element(s)
--------------------------------------
  
Compiler stage 1 finished in 0.000112057 seconds.

Compiler stage 2: Computing intermediate representation
-------------------------------------------------------
  Computing representation of 1 elements
  Computing representation of 1 dofmaps
  Computing representation of 0 coordinate mappings
  Computing representation of integrals
  Computing representation of forms
  
Compiler stage 2 finished in 0.000939131 seconds.

Compiler stage 3: Optimizing intermediate representation
--------------------------------------------------------
  Skipping optimizations, add -O or attach {'optimize': True} metadata to integrals
  
Compiler stage 3 finished in 0.000104904 seconds.

Compiler stage 4: Generating code
---------------------------------
  Generating code for 1 finite_element(s)
  Generating code for 1 dofmap(s)
  Generating code for 0 coordinate_mapping(s)
  Generating code for integrals
  Generating code for forms
  
Compiler stage 4 finished in 0.0121138 seconds.

Compiler stage 4.1 finished in 1.66893e-06 seconds.

Compiler stage 5: Formatting code
---------------------------------
  
Compiler stage 5 finished in 0.000257015 seconds.

FFC finished in 0.0137074 seconds.
Calling FFC just-in-time (JIT) compiler, this may take some time.
Compiling element ffc_element_4813df87e675bcac8669b799984ca9b202dc7565

Compiler stage 1: Analyzing element(s)
--------------------------------------
  
Compiler stage 1 finished in 0.000152588 seconds.

Compiler stage 2: Computing intermediate representation
-------------------------------------------------------
  Computing representation of 1 elements
  Computing representation of 1 dofmaps
  Computing representation of 0 coordinate mappings
  Computing representation of integrals
  Computing representation of forms
  
Compiler stage 2 finished in 0.0805314 seconds.

Compiler stage 3: Optimizing intermediate representation
--------------------------------------------------------
  Skipping optimizations, add -O or attach {'optimize': True} metadata to integrals
  
Compiler stage 3 finished in 0.00010705 seconds.

Compiler stage 4: Generating code
---------------------------------
  Generating code for 1 finite_element(s)
  Generating code for 1 dofmap(s)
  Generating code for 0 coordinate_mapping(s)
  Generating code for integrals
  Generating code for forms
  
Compiler stage 4 finished in 0.0501058 seconds.

Compiler stage 4.1 finished in 1.43051e-06 seconds.

Compiler stage 5: Formatting code
---------------------------------
  
Compiler stage 5 finished in 0.000295877 seconds.

FFC finished in 0.131381 seconds.
Calling FFC just-in-time (JIT) compiler, this may take some time.
Compiling element ffc_element_bdfd4b7580cef20cf29f4d27f7e659fcb996b41f

Compiler stage 1: Analyzing element(s)
--------------------------------------
  
Compiler stage 1 finished in 0.000112772 seconds.

Compiler stage 2: Computing intermediate representation
-------------------------------------------------------
  Computing representation of 1 elements
  Computing representation of 1 dofmaps
  Computing representation of 0 coordinate mappings
  Computing representation of integrals
  Computing representation of forms
  
Compiler stage 2 finished in 0.0010128 seconds.

Compiler stage 3: Optimizing intermediate representation
--------------------------------------------------------
  Skipping optimizations, add -O or attach {'optimize': True} metadata to integrals
  
Compiler stage 3 finished in 0.00010252 seconds.

Compiler stage 4: Generating code
---------------------------------
  Generating code for 1 finite_element(s)
  Generating code for 1 dofmap(s)
  Generating code for 0 coordinate_mapping(s)
  Generating code for integrals
  Generating code for forms
  
Compiler stage 4 finished in 0.0242608 seconds.

Compiler stage 4.1 finished in 1.43051e-06 seconds.

Compiler stage 5: Formatting code
---------------------------------
  
Compiler stage 5 finished in 0.000267506 seconds.

FFC finished in 0.025938 seconds.
Calling FFC just-in-time (JIT) compiler, this may take some time.
Compiling element ffc_element_390ab3ae6a88c8b8eb8a865b1e891b64e1397624

Compiler stage 1: Analyzing element(s)
--------------------------------------
  
Compiler stage 1 finished in 0.000127077 seconds.

Compiler stage 2: Computing intermediate representation
-------------------------------------------------------
  Computing representation of 1 elements
  Computing representation of 1 dofmaps
  Computing representation of 0 coordinate mappings
  Computing representation of integrals
  Computing representation of forms
  
Compiler stage 2 finished in 0.00168896 seconds.

Compiler stage 3: Optimizing intermediate representation
--------------------------------------------------------
  Skipping optimizations, add -O or attach {'optimize': True} metadata to integrals
  
Compiler stage 3 finished in 0.000101089 seconds.

Compiler stage 4: Generating code
---------------------------------
  Generating code for 1 finite_element(s)
  Generating code for 1 dofmap(s)
  Generating code for 0 coordinate_mapping(s)
  Generating code for integrals
  Generating code for forms
  
Compiler stage 4 finished in 0.04213 seconds.

Compiler stage 4.1 finished in 9.53674e-07 seconds.

Compiler stage 5: Formatting code
---------------------------------
  
Compiler stage 5 finished in 0.000291109 seconds.

FFC finished in 0.0445237 seconds.
Calling FFC just-in-time (JIT) compiler, this may take some time.
Compiling element ffc_element_ac0fb980fd5264434313e73edb4879548e0f1f42

Compiler stage 1: Analyzing element(s)
--------------------------------------
  
Compiler stage 1 finished in 0.000109196 seconds.

Compiler stage 2: Computing intermediate representation
-------------------------------------------------------
  Computing representation of 1 elements
  Computing representation of 1 dofmaps
  Computing representation of 0 coordinate mappings
  Computing representation of integrals
  Computing representation of forms
  
Compiler stage 2 finished in 0.00154757 seconds.

Compiler stage 3: Optimizing intermediate representation
--------------------------------------------------------
  Skipping optimizations, add -O or attach {'optimize': True} metadata to integrals
  
Compiler stage 3 finished in 8.32081e-05 seconds.

Compiler stage 4: Generating code
---------------------------------
  Generating code for 1 finite_element(s)
  Generating code for 1 dofmap(s)
  Generating code for 0 coordinate_mapping(s)
  Generating code for integrals
  Generating code for forms
  
Compiler stage 4 finished in 0.051095 seconds.

Compiler stage 4.1 finished in 9.53674e-07 seconds.

Compiler stage 5: Formatting code
---------------------------------
  
Compiler stage 5 finished in 0.000250578 seconds.

FFC finished in 0.0532341 seconds.
Calling FFC just-in-time (JIT) compiler, this may take some time.
Compiling form ffc_form_b7bd5fdc5b1f16a9c58e1b4a608ee02817f52544

Compiler stage 1: Analyzing form(s)
-----------------------------------
Adjusting missing element cell to triangle.
Adjusting missing element cell to triangle.
Adjusting missing element cell to triangle.
Adjusting missing element cell to triangle.
Adjusting missing element cell to triangle.
Adjusting missing element cell to triangle.
  
  Geometric dimension:       2
  Number of cell subdomains: 0
  Rank:                      0
  Arguments:                 '()'
  Number of coefficients:    9
  Coefficients:              '[f_0, f_1, f_2, f_3, f_7, f_22, f_25, f_28, f_84]'
  Unique elements:           'R0(?,?), Mixed<CG1(?,?), CG1(?,?)>, CG1(?,?), Vector<2
                              x CG1(?,?)>'
  Unique sub elements:       'R0(?,?), Mixed<CG1(?,?), CG1(?,?)>, CG1(?,?), Vector<2
                              x CG1(?,?)>'
  
  representation:    auto --> uflacs
  quadrature_rule:   auto --> default
  quadrature_degree: auto --> 8
  quadrature_degree: 8
  
Compiler stage 1 finished in 0.0313158 seconds.

Compiler stage 2: Computing intermediate representation
-------------------------------------------------------
  Computing representation of 0 elements
  Computing representation of 0 dofmaps
  Computing representation of 0 coordinate mappings
  Computing representation of integrals
  Computing uflacs representation
  Computing representation of forms
  
Compiler stage 2 finished in 0.0291903 seconds.

Compiler stage 3: Optimizing intermediate representation
--------------------------------------------------------
  Optimizing uflacs representation
  
Compiler stage 3 finished in 9.29832e-05 seconds.

Compiler stage 4: Generating code
---------------------------------
  Generating code for 0 finite_element(s)
  Generating code for 0 dofmap(s)
  Generating code for 0 coordinate_mapping(s)
  Generating code for integrals
  Generating code from ffc.uflacs representation
  Generating code for forms
  
Compiler stage 4 finished in 0.00901508 seconds.

Compiler stage 4.1 finished in 1.19209e-06 seconds.

Compiler stage 5: Formatting code
---------------------------------
  
Compiler stage 5 finished in 0.000200987 seconds.

FFC finished in 0.0699711 seconds.
Calling FFC just-in-time (JIT) compiler, this may take some time.
Compiling element ffc_element_38cb26e3a53193b0b07aaa3eff1c706af76dcab7

Compiler stage 1: Analyzing element(s)
--------------------------------------
  
Compiler stage 1 finished in 7.72476e-05 seconds.

Compiler stage 2: Computing intermediate representation
-------------------------------------------------------
  Computing representation of 1 elements
  Computing representation of 1 dofmaps
  Computing representation of 0 coordinate mappings
  Computing representation of integrals
  Computing representation of forms
  
Compiler stage 2 finished in 0.000719547 seconds.

Compiler stage 3: Optimizing intermediate representation
--------------------------------------------------------
  Skipping optimizations, add -O or attach {'optimize': True} metadata to integrals
  
Compiler stage 3 finished in 8.4877e-05 seconds.

Compiler stage 4: Generating code
---------------------------------
  Generating code for 1 finite_element(s)
  Generating code for 1 dofmap(s)
  Generating code for 0 coordinate_mapping(s)
  Generating code for integrals
  Generating code for forms
  
Compiler stage 4 finished in 0.00923705 seconds.

Compiler stage 4.1 finished in 1.66893e-06 seconds.

Compiler stage 5: Formatting code
---------------------------------
  
Compiler stage 5 finished in 0.000200272 seconds.

FFC finished in 0.0104706 seconds.
Calling FFC just-in-time (JIT) compiler, this may take some time.
Compiling element ffc_element_1f466892668df2108de73e34398ec5c9e2e46d8a

Compiler stage 1: Analyzing element(s)
--------------------------------------
  
Compiler stage 1 finished in 0.000103474 seconds.

Compiler stage 2: Computing intermediate representation
-------------------------------------------------------
  Computing representation of 1 elements
  Computing representation of 1 dofmaps
  Computing representation of 0 coordinate mappings
  Computing representation of integrals
  Computing representation of forms
  
Compiler stage 2 finished in 0.00119615 seconds.

Compiler stage 3: Optimizing intermediate representation
--------------------------------------------------------
  Skipping optimizations, add -O or attach {'optimize': True} metadata to integrals
  
Compiler stage 3 finished in 8.51154e-05 seconds.

Compiler stage 4: Generating code
---------------------------------
  Generating code for 1 finite_element(s)
  Generating code for 1 dofmap(s)
  Generating code for 0 coordinate_mapping(s)
  Generating code for integrals
  Generating code for forms
  
Compiler stage 4 finished in 0.014971 seconds.

Compiler stage 4.1 finished in 7.15256e-07 seconds.

Compiler stage 5: Formatting code
---------------------------------
  
Compiler stage 5 finished in 0.000213861 seconds.

FFC finished in 0.0167196 seconds.
Calling FFC just-in-time (JIT) compiler, this may take some time.
Compiling element ffc_element_5bff55b833e9a6bf9068007282928b48c5b347bd

Compiler stage 1: Analyzing element(s)
--------------------------------------
  
Compiler stage 1 finished in 0.000103951 seconds.

Compiler stage 2: Computing intermediate representation
-------------------------------------------------------
  Computing representation of 1 elements
  Computing representation of 1 dofmaps
  Computing representation of 0 coordinate mappings
  Computing representation of integrals
  Computing representation of forms
  
Compiler stage 2 finished in 0.00112796 seconds.

Compiler stage 3: Optimizing intermediate representation
--------------------------------------------------------
  Skipping optimizations, add -O or attach {'optimize': True} metadata to integrals
  
Compiler stage 3 finished in 8.60691e-05 seconds.

Compiler stage 4: Generating code
---------------------------------
  Generating code for 1 finite_element(s)
  Generating code for 1 dofmap(s)
  Generating code for 0 coordinate_mapping(s)
  Generating code for integrals
  Generating code for forms
  
Compiler stage 4 finished in 0.0148618 seconds.

Compiler stage 4.1 finished in 4.76837e-07 seconds.

Compiler stage 5: Formatting code
---------------------------------
  
Compiler stage 5 finished in 0.000218868 seconds.

FFC finished in 0.0165472 seconds.
Calling FFC just-in-time (JIT) compiler, this may take some time.
Compiling element ffc_element_be7b04ad19777cd4b675aa1b98eddf591b7c4b5d

Compiler stage 1: Analyzing element(s)
--------------------------------------
  
Compiler stage 1 finished in 9.799e-05 seconds.

Compiler stage 2: Computing intermediate representation
-------------------------------------------------------
  Computing representation of 1 elements
  Computing representation of 1 dofmaps
  Computing representation of 0 coordinate mappings
  Computing representation of integrals
  Computing representation of forms
  
Compiler stage 2 finished in 0.000715494 seconds.

Compiler stage 3: Optimizing intermediate representation
--------------------------------------------------------
  Skipping optimizations, add -O or attach {'optimize': True} metadata to integrals
  
Compiler stage 3 finished in 8.44002e-05 seconds.

Compiler stage 4: Generating code
---------------------------------
  Generating code for 1 finite_element(s)
  Generating code for 1 dofmap(s)
  Generating code for 0 coordinate_mapping(s)
  Generating code for integrals
  Generating code for forms
  
Compiler stage 4 finished in 0.00278997 seconds.

Compiler stage 4.1 finished in 7.15256e-07 seconds.

Compiler stage 5: Formatting code
---------------------------------
  
Compiler stage 5 finished in 0.000202894 seconds.

FFC finished in 0.00404048 seconds.
Calling FFC just-in-time (JIT) compiler, this may take some time.
Compiling coordinate_mapping ffc_coordinate_mapping_70eef6e49aea794038256830741bf5b44b04a89c

Compiler stage 1: Analyzing coordinate_mapping(s)
-------------------------------------------------
  
Compiler stage 1 finished in 0.000110388 seconds.

Compiler stage 2: Computing intermediate representation
-------------------------------------------------------
  Computing representation of 0 elements
  Computing representation of 0 dofmaps
  Computing representation of 1 coordinate mappings
  Computing representation of integrals
  Computing representation of forms
  
Compiler stage 2 finished in 0.000619411 seconds.

Compiler stage 3: Optimizing intermediate representation
--------------------------------------------------------
  Skipping optimizations, add -O or attach {'optimize': True} metadata to integrals
  
Compiler stage 3 finished in 8.53539e-05 seconds.

Compiler stage 4: Generating code
---------------------------------
  Generating code for 0 finite_element(s)
  Generating code for 0 dofmap(s)
  Generating code for 1 coordinate_mapping(s)
  Generating code for integrals
  Generating code for forms
  
Compiler stage 4 finished in 0.00258064 seconds.

Compiler stage 4.1 finished in 1.19209e-06 seconds.

Compiler stage 5: Formatting code
---------------------------------
  
Compiler stage 5 finished in 0.000192165 seconds.

FFC finished in 0.00374174 seconds.
Calling FFC just-in-time (JIT) compiler, this may take some time.
Compiling form ffc_form_76a1319299fb83716402acf3cddb039f41c01f91

Compiler stage 1: Analyzing form(s)
-----------------------------------
Adjusting missing element cell to triangle.
  
  Geometric dimension:       2
  Number of cell subdomains: 0
  Rank:                      0
  Arguments:                 '()'
  Number of coefficients:    3
  Coefficients:              '[f_22, f_28, f_47]'
  Unique elements:           'Mixed<CG1(?,?), CG1(?,?)>, CG1(?,?), Vector<2 x CG1(?,
                             ?)>'
  Unique sub elements:       'Mixed<CG1(?,?), CG1(?,?)>, CG1(?,?), Vector<2 x CG1(?,
                             ?)>'
  
  representation:    auto --> uflacs
  quadrature_rule:   auto --> default
  quadrature_degree: auto --> 3
  quadrature_degree: 3
  
Compiler stage 1 finished in 0.00306749 seconds.

Compiler stage 2: Computing intermediate representation
-------------------------------------------------------
  Computing representation of 0 elements
  Computing representation of 0 dofmaps
  Computing representation of 0 coordinate mappings
  Computing representation of integrals
  Computing uflacs representation
  Computing representation of forms
  
Compiler stage 2 finished in 0.0084033 seconds.

Compiler stage 3: Optimizing intermediate representation
--------------------------------------------------------
  Optimizing uflacs representation
  
Compiler stage 3 finished in 9.01222e-05 seconds.

Compiler stage 4: Generating code
---------------------------------
  Generating code for 0 finite_element(s)
  Generating code for 0 dofmap(s)
  Generating code for 0 coordinate_mapping(s)
  Generating code for integrals
  Generating code from ffc.uflacs representation
  Generating code for forms
  
Compiler stage 4 finished in 0.00195789 seconds.

Compiler stage 4.1 finished in 7.15256e-07 seconds.

Compiler stage 5: Formatting code
---------------------------------
  
Compiler stage 5 finished in 0.000197411 seconds.

FFC finished in 0.0138731 seconds.
Calling FFC just-in-time (JIT) compiler, this may take some time.
Compiling form ffc_form_1da5113234ec662b09de01a9c7966d40590edb90

Compiler stage 1: Analyzing form(s)
-----------------------------------
  
  Geometric dimension:       2
  Number of cell subdomains: 0
  Rank:                      0
  Arguments:                 '()'
  Number of coefficients:    2
  Coefficients:              '[f_22, f_28]'
  Unique elements:           'Mixed<CG1(?,?), CG1(?,?)>, CG1(?,?), Vector<2 x CG1(?,
                             ?)>'
  Unique sub elements:       'Mixed<CG1(?,?), CG1(?,?)>, CG1(?,?), Vector<2 x CG1(?,
                             ?)>'
  
  representation:    auto --> uflacs
  quadrature_rule:   auto --> default
  quadrature_degree: auto --> 2
  quadrature_degree: 2
  
Compiler stage 1 finished in 0.00282478 seconds.

Compiler stage 2: Computing intermediate representation
-------------------------------------------------------
  Computing representation of 0 elements
  Computing representation of 0 dofmaps
  Computing representation of 0 coordinate mappings
  Computing representation of integrals
  Computing uflacs representation
  Computing representation of forms
  
Compiler stage 2 finished in 0.0082593 seconds.

Compiler stage 3: Optimizing intermediate representation
--------------------------------------------------------
  Optimizing uflacs representation
  
Compiler stage 3 finished in 8.86917e-05 seconds.

Compiler stage 4: Generating code
---------------------------------
  Generating code for 0 finite_element(s)
  Generating code for 0 dofmap(s)
  Generating code for 0 coordinate_mapping(s)
  Generating code for integrals
  Generating code from ffc.uflacs representation
  Generating code for forms
  
Compiler stage 4 finished in 0.0017786 seconds.

Compiler stage 4.1 finished in 4.76837e-07 seconds.

Compiler stage 5: Formatting code
---------------------------------
  
Compiler stage 5 finished in 0.000189781 seconds.

FFC finished in 0.013294 seconds.
Calling FFC just-in-time (JIT) compiler, this may take some time.
Compiling form ffc_form_247bf8dc90df668df3b6dfcad5d61b62d50b56e1

Compiler stage 1: Analyzing form(s)
-----------------------------------
  
  Geometric dimension:       2
  Number of cell subdomains: 0
  Rank:                      1
  Arguments:                 '(v_0)'
  Number of coefficients:    1
  Coefficients:              '[f_22]'
  Unique elements:           'CG1(?,?), Mixed<CG1(?,?), CG1(?,?)>, Vector<2 x CG1(?,
                             ?)>'
  Unique sub elements:       'CG1(?,?), Mixed<CG1(?,?), CG1(?,?)>, Vector<2 x CG1(?,
                             ?)>'
  
  representation:    auto --> uflacs
  quadrature_rule:   auto --> default
  quadrature_degree: auto --> 2
  quadrature_degree: 2
  
Compiler stage 1 finished in 0.0027833 seconds.

Compiler stage 2: Computing intermediate representation
-------------------------------------------------------
  Computing representation of 0 elements
  Computing representation of 0 dofmaps
  Computing representation of 0 coordinate mappings
  Computing representation of integrals
  Computing uflacs representation
  Computing representation of forms
  
Compiler stage 2 finished in 0.0078907 seconds.

Compiler stage 3: Optimizing intermediate representation
--------------------------------------------------------
  Optimizing uflacs representation
  
Compiler stage 3 finished in 9.01222e-05 seconds.

Compiler stage 4: Generating code
---------------------------------
  Generating code for 0 finite_element(s)
  Generating code for 0 dofmap(s)
  Generating code for 0 coordinate_mapping(s)
  Generating code for integrals
  Generating code from ffc.uflacs representation
  Generating code for forms
  
Compiler stage 4 finished in 0.00181484 seconds.

Compiler stage 4.1 finished in 1.43051e-06 seconds.

Compiler stage 5: Formatting code
---------------------------------
  
Compiler stage 5 finished in 0.000183344 seconds.

FFC finished in 0.0129135 seconds.
Calling FFC just-in-time (JIT) compiler, this may take some time.
Compiling element ffc_element_d7b725d021aa6ea4a5e7a2456fe169e8a2a498c1

Compiler stage 1: Analyzing element(s)
--------------------------------------
  
Compiler stage 1 finished in 8.4877e-05 seconds.

Compiler stage 2: Computing intermediate representation
-------------------------------------------------------
  Computing representation of 1 elements
  Computing representation of 1 dofmaps
  Computing representation of 0 coordinate mappings
  Computing representation of integrals
  Computing representation of forms
  
Compiler stage 2 finished in 0.00098753 seconds.

Compiler stage 3: Optimizing intermediate representation
--------------------------------------------------------
  Skipping optimizations, add -O or attach {'optimize': True} metadata to integrals
  
Compiler stage 3 finished in 8.39233e-05 seconds.

Compiler stage 4: Generating code
---------------------------------
  Generating code for 1 finite_element(s)
  Generating code for 1 dofmap(s)
  Generating code for 0 coordinate_mapping(s)
  Generating code for integrals
  Generating code for forms
  
Compiler stage 4 finished in 0.0147245 seconds.

Compiler stage 4.1 finished in 4.76837e-07 seconds.

Compiler stage 5: Formatting code
---------------------------------
  
Compiler stage 5 finished in 0.000196695 seconds.

FFC finished in 0.0162261 seconds.
Calling FFC just-in-time (JIT) compiler, this may take some time.
Compiling coordinate_mapping ffc_coordinate_mapping_b443ca5ae3403fe77cb8fa2f9d340af027aafe73

Compiler stage 1: Analyzing coordinate_mapping(s)
-------------------------------------------------
  
Compiler stage 1 finished in 0.000101089 seconds.

Compiler stage 2: Computing intermediate representation
-------------------------------------------------------
  Computing representation of 0 elements
  Computing representation of 0 dofmaps
  Computing representation of 1 coordinate mappings
  Computing representation of integrals
  Computing representation of forms
  
Compiler stage 2 finished in 0.000594854 seconds.

Compiler stage 3: Optimizing intermediate representation
--------------------------------------------------------
  Skipping optimizations, add -O or attach {'optimize': True} metadata to integrals
  
Compiler stage 3 finished in 8.39233e-05 seconds.

Compiler stage 4: Generating code
---------------------------------
  Generating code for 0 finite_element(s)
  Generating code for 0 dofmap(s)
  Generating code for 1 coordinate_mapping(s)
  Generating code for integrals
  Generating code for forms
  
Compiler stage 4 finished in 0.0025332 seconds.

Compiler stage 4.1 finished in 7.15256e-07 seconds.

Compiler stage 5: Formatting code
---------------------------------
  
Compiler stage 5 finished in 0.000192165 seconds.

FFC finished in 0.00365186 seconds.
Calling FFC just-in-time (JIT) compiler, this may take some time.
Compiling form ffc_form_d7cb718b8394a5cbb1c91989bdb423b4983b786f

Compiler stage 1: Analyzing form(s)
-----------------------------------
  
  Geometric dimension:       2
  Number of cell subdomains: 0
  Rank:                      2
  Arguments:                 '(v_0, v_1)'
  Number of coefficients:    0
  Coefficients:              '[]'
  Unique elements:           'CG1(?,?), Vector<2 x CG1(?,?)>'
  Unique sub elements:       'CG1(?,?), Vector<2 x CG1(?,?)>'
  
  representation:    auto --> uflacs
  quadrature_rule:   auto --> default
  quadrature_degree: auto --> 2
  quadrature_degree: 2
  
Compiler stage 1 finished in 0.00283837 seconds.

Compiler stage 2: Computing intermediate representation
-------------------------------------------------------
  Computing representation of 0 elements
  Computing representation of 0 dofmaps
  Computing representation of 0 coordinate mappings
  Computing representation of integrals
  Computing uflacs representation
  Computing representation of forms
  
Compiler stage 2 finished in 0.00686145 seconds.

Compiler stage 3: Optimizing intermediate representation
--------------------------------------------------------
  Optimizing uflacs representation
  
Compiler stage 3 finished in 9.70364e-05 seconds.

Compiler stage 4: Generating code
---------------------------------
  Generating code for 0 finite_element(s)
  Generating code for 0 dofmap(s)
  Generating code for 0 coordinate_mapping(s)
  Generating code for integrals
  Generating code from ffc.uflacs representation
  Generating code for forms
  
Compiler stage 4 finished in 0.00165963 seconds.

Compiler stage 4.1 finished in 9.53674e-07 seconds.

Compiler stage 5: Formatting code
---------------------------------
  
Compiler stage 5 finished in 0.000185013 seconds.

FFC finished in 0.0117958 seconds.
Calling FFC just-in-time (JIT) compiler, this may take some time.
Compiling element ffc_element_ff4b174989ef6efe1b6223fb3b56bbc54b0a2ccb

Compiler stage 1: Analyzing element(s)
--------------------------------------
  
Compiler stage 1 finished in 8.98838e-05 seconds.

Compiler stage 2: Computing intermediate representation
-------------------------------------------------------
  Computing representation of 1 elements
  Computing representation of 1 dofmaps
  Computing representation of 0 coordinate mappings
  Computing representation of integrals
  Computing representation of forms
  
Compiler stage 2 finished in 0.00124979 seconds.

Compiler stage 3: Optimizing intermediate representation
--------------------------------------------------------
  Skipping optimizations, add -O or attach {'optimize': True} metadata to integrals
  
Compiler stage 3 finished in 8.51154e-05 seconds.

Compiler stage 4: Generating code
---------------------------------
  Generating code for 1 finite_element(s)
  Generating code for 1 dofmap(s)
  Generating code for 0 coordinate_mapping(s)
  Generating code for integrals
  Generating code for forms
  
Compiler stage 4 finished in 0.00621152 seconds.

Compiler stage 4.1 finished in 9.53674e-07 seconds.

Compiler stage 5: Formatting code
---------------------------------
  
Compiler stage 5 finished in 0.000191927 seconds.

FFC finished in 0.00797963 seconds.
Calling FFC just-in-time (JIT) compiler, this may take some time.
Compiling form ffc_form_c98db38ffe1c87b1014927a8aa039ee8f150f9e2

Compiler stage 1: Analyzing form(s)
-----------------------------------
  
  Geometric dimension:       2
  Number of cell subdomains: 0
  Rank:                      0
  Arguments:                 '()'
  Number of coefficients:    1
  Coefficients:              '[f_105]'
  Unique elements:           'CG1(?,?), Vector<2 x CG1(?,?)>'
  Unique sub elements:       'CG1(?,?), Vector<2 x CG1(?,?)>'
  
  representation:    auto --> uflacs
  quadrature_rule:   auto --> default
  quadrature_degree: auto --> 1
  quadrature_degree: 1
  
Compiler stage 1 finished in 0.00264192 seconds.

Compiler stage 2: Computing intermediate representation
-------------------------------------------------------
  Computing representation of 0 elements
  Computing representation of 0 dofmaps
  Computing representation of 0 coordinate mappings
  Computing representation of integrals
  Computing uflacs representation
  Computing representation of forms
  
Compiler stage 2 finished in 0.00457215 seconds.

Compiler stage 3: Optimizing intermediate representation
--------------------------------------------------------
  Optimizing uflacs representation
  
Compiler stage 3 finished in 8.9407e-05 seconds.

Compiler stage 4: Generating code
---------------------------------
  Generating code for 0 finite_element(s)
  Generating code for 0 dofmap(s)
  Generating code for 0 coordinate_mapping(s)
  Generating code for integrals
  Generating code from ffc.uflacs representation
  Generating code for forms
  
Compiler stage 4 finished in 0.00181222 seconds.

Compiler stage 4.1 finished in 9.53674e-07 seconds.

Compiler stage 5: Formatting code
---------------------------------
  
Compiler stage 5 finished in 0.00018692 seconds.

FFC finished in 0.0094552 seconds.
Calling FFC just-in-time (JIT) compiler, this may take some time.
Compiling element ffc_element_cdcb7efc1083806d2795ddd03c72130f4308c334

Compiler stage 1: Analyzing element(s)
--------------------------------------
  
Compiler stage 1 finished in 7.62939e-05 seconds.

Compiler stage 2: Computing intermediate representation
-------------------------------------------------------
  Computing representation of 1 elements
  Computing representation of 1 dofmaps
  Computing representation of 0 coordinate mappings
  Computing representation of integrals
  Computing representation of forms
  
Compiler stage 2 finished in 0.000640869 seconds.

Compiler stage 3: Optimizing intermediate representation
--------------------------------------------------------
  Skipping optimizations, add -O or attach {'optimize': True} metadata to integrals
  
Compiler stage 3 finished in 7.98702e-05 seconds.

Compiler stage 4: Generating code
---------------------------------
  Generating code for 1 finite_element(s)
  Generating code for 1 dofmap(s)
  Generating code for 0 coordinate_mapping(s)
  Generating code for integrals
  Generating code for forms
  
Compiler stage 4 finished in 0.00601888 seconds.

Compiler stage 4.1 finished in 4.76837e-07 seconds.

Compiler stage 5: Formatting code
---------------------------------
  
Compiler stage 5 finished in 0.000196934 seconds.

FFC finished in 0.00715256 seconds.
Calling FFC just-in-time (JIT) compiler, this may take some time.
Compiling element ffc_element_68eb2b8f3db69f19f1d1c3f2527417cdf25a4c8d

Compiler stage 1: Analyzing element(s)
--------------------------------------
  
Compiler stage 1 finished in 0.000103712 seconds.

Compiler stage 2: Computing intermediate representation
-------------------------------------------------------
  Computing representation of 1 elements
  Computing representation of 1 dofmaps
  Computing representation of 0 coordinate mappings
  Computing representation of integrals
  Computing representation of forms
  
Compiler stage 2 finished in 0.00102472 seconds.

Compiler stage 3: Optimizing intermediate representation
--------------------------------------------------------
  Skipping optimizations, add -O or attach {'optimize': True} metadata to integrals
  
Compiler stage 3 finished in 8.29697e-05 seconds.

Compiler stage 4: Generating code
---------------------------------
  Generating code for 1 finite_element(s)
  Generating code for 1 dofmap(s)
  Generating code for 0 coordinate_mapping(s)
  Generating code for integrals
  Generating code for forms
  
Compiler stage 4 finished in 0.00903654 seconds.

Compiler stage 4.1 finished in 7.15256e-07 seconds.

Compiler stage 5: Formatting code
---------------------------------
  
Compiler stage 5 finished in 0.000211954 seconds.

FFC finished in 0.010607 seconds.
Calling FFC just-in-time (JIT) compiler, this may take some time.
Compiling coordinate_mapping ffc_coordinate_mapping_103f8b84d077c1a02b3c817af85f70070d65402b

Compiler stage 1: Analyzing coordinate_mapping(s)
-------------------------------------------------
  
Compiler stage 1 finished in 9.91821e-05 seconds.

Compiler stage 2: Computing intermediate representation
-------------------------------------------------------
  Computing representation of 0 elements
  Computing representation of 0 dofmaps
  Computing representation of 1 coordinate mappings
  Computing representation of integrals
  Computing representation of forms
  
Compiler stage 2 finished in 0.0005126 seconds.

Compiler stage 3: Optimizing intermediate representation
--------------------------------------------------------
  Skipping optimizations, add -O or attach {'optimize': True} metadata to integrals
  
Compiler stage 3 finished in 8.53539e-05 seconds.

Compiler stage 4: Generating code
---------------------------------
  Generating code for 0 finite_element(s)
  Generating code for 0 dofmap(s)
  Generating code for 1 coordinate_mapping(s)
  Generating code for integrals
  Generating code for forms
  
Compiler stage 4 finished in 0.00234962 seconds.

Compiler stage 4.1 finished in 7.15256e-07 seconds.

Compiler stage 5: Formatting code
---------------------------------
  
Compiler stage 5 finished in 0.000191212 seconds.

FFC finished in 0.00338769 seconds.
Calling FFC just-in-time (JIT) compiler, this may take some time.
Compiling form ffc_form_18fdbfd6e0ef12eb7784154ffe9e07d1ca398945

Compiler stage 1: Analyzing form(s)
-----------------------------------
  
  Geometric dimension:       2
  Number of cell subdomains: 0
  Rank:                      0
  Arguments:                 '()'
  Number of coefficients:    3
  Coefficients:              '[f_22, f_25, f_28]'
  Unique elements:           'Mixed<CG1(?,?), CG1(?,?)>, CG1(?,?), Vector<2 x CG1(?,
                             ?)>'
  Unique sub elements:       'Mixed<CG1(?,?), CG1(?,?)>, CG1(?,?), Vector<2 x CG1(?,
                             ?)>'
  
  representation:    auto --> uflacs
  quadrature_rule:   auto --> default
  quadrature_degree: auto --> 4
  quadrature_degree: 4
  
Compiler stage 1 finished in 0.00285196 seconds.

Compiler stage 2: Computing intermediate representation
-------------------------------------------------------
  Computing representation of 0 elements
  Computing representation of 0 dofmaps
  Computing representation of 0 coordinate mappings
  Computing representation of integrals
  Computing uflacs representation
  Computing representation of forms
  
Compiler stage 2 finished in 0.00838637 seconds.

Compiler stage 3: Optimizing intermediate representation
--------------------------------------------------------
  Optimizing uflacs representation
  
Compiler stage 3 finished in 8.89301e-05 seconds.

Compiler stage 4: Generating code
---------------------------------
  Generating code for 0 finite_element(s)
  Generating code for 0 dofmap(s)
  Generating code for 0 coordinate_mapping(s)
  Generating code for integrals
  Generating code from ffc.uflacs representation
  Generating code for forms
  
Compiler stage 4 finished in 0.00199389 seconds.

Compiler stage 4.1 finished in 7.15256e-07 seconds.

Compiler stage 5: Formatting code
---------------------------------
  
Compiler stage 5 finished in 0.00019455 seconds.

FFC finished in 0.0136676 seconds.
Calling FFC just-in-time (JIT) compiler, this may take some time.
Compiling form ffc_form_575cbe03129be6cd41e9b3b6d1275035e77a7b1f

Compiler stage 1: Analyzing form(s)
-----------------------------------
Adjusting missing element cell to triangle.
Adjusting missing element cell to triangle.
Adjusting missing element cell to triangle.
  
  Geometric dimension:       2
  Number of cell subdomains: 0
  Rank:                      1
  Arguments:                 '(v_0)'
  Number of coefficients:    6
  Coefficients:              '[f_2, f_3, f_7, f_22, f_25, f_28]'
  Unique elements:           'Mixed<Vector<2 x CG2(?,?)>, CG1(?,?)>, R0(?,?), Mixed<
                             CG1(?,?), CG1(?,?)>, CG1(?,?), Vector<2 x CG1(?,?)>'
  Unique sub elements:       'Mixed<Vector<2 x CG2(?,?)>, CG1(?,?)>, R0(?,?), Mixed<
                             CG1(?,?), CG1(?,?)>, CG1(?,?), Vector<2 x CG1(?,?)>, Ve
                             ctor<2 x CG2(?,?)>, CG2(?,?)'
  
  representation:    auto --> uflacs
  quadrature_rule:   auto --> default
  quadrature_degree: auto --> 5
  quadrature_degree: 5
  
Compiler stage 1 finished in 0.0130665 seconds.

Compiler stage 2: Computing intermediate representation
-------------------------------------------------------
  Computing representation of 0 elements
  Computing representation of 0 dofmaps
  Computing representation of 0 coordinate mappings
  Computing representation of integrals
  Computing uflacs representation
  Computing representation of forms
  
Compiler stage 2 finished in 0.030942 seconds.

Compiler stage 3: Optimizing intermediate representation
--------------------------------------------------------
  Optimizing uflacs representation
  
Compiler stage 3 finished in 9.5129e-05 seconds.

Compiler stage 4: Generating code
---------------------------------
  Generating code for 0 finite_element(s)
  Generating code for 0 dofmap(s)
  Generating code for 0 coordinate_mapping(s)
  Generating code for integrals
  Generating code from ffc.uflacs representation
  Generating code for forms
  
Compiler stage 4 finished in 0.00412369 seconds.

Compiler stage 4.1 finished in 9.53674e-07 seconds.

Compiler stage 5: Formatting code
---------------------------------
  
Compiler stage 5 finished in 0.000183821 seconds.

FFC finished in 0.0485692 seconds.
Calling FFC just-in-time (JIT) compiler, this may take some time.
Compiling element ffc_element_ed3ed5a2f9a86cc900f47ff4b527f48bb8bb4793

Compiler stage 1: Analyzing element(s)
--------------------------------------
  
Compiler stage 1 finished in 7.70092e-05 seconds.

Compiler stage 2: Computing intermediate representation
-------------------------------------------------------
  Computing representation of 1 elements
  Computing representation of 1 dofmaps
  Computing representation of 0 coordinate mappings
  Computing representation of integrals
  Computing representation of forms
  
Compiler stage 2 finished in 0.000631809 seconds.

Compiler stage 3: Optimizing intermediate representation
--------------------------------------------------------
  Skipping optimizations, add -O or attach {'optimize': True} metadata to integrals
  
Compiler stage 3 finished in 8.05855e-05 seconds.

Compiler stage 4: Generating code
---------------------------------
  Generating code for 1 finite_element(s)
  Generating code for 1 dofmap(s)
  Generating code for 0 coordinate_mapping(s)
  Generating code for integrals
  Generating code for forms
  
Compiler stage 4 finished in 0.00266266 seconds.

Compiler stage 4.1 finished in 9.53674e-07 seconds.

Compiler stage 5: Formatting code
---------------------------------
  
Compiler stage 5 finished in 0.000184536 seconds.

FFC finished in 0.00378108 seconds.
Calling FFC just-in-time (JIT) compiler, this may take some time.
Compiling form ffc_form_0de5cb56fba2b4f63dc56a77e9b0a6526c9233a2

Compiler stage 1: Analyzing form(s)
-----------------------------------
Adjusting missing element cell to triangle.
  
  Geometric dimension:       2
  Number of cell subdomains: 0
  Rank:                      2
  Arguments:                 '(v_0, v_1)'
  Number of coefficients:    2
  Coefficients:              '[f_7, f_22]'
  Unique elements:           'Mixed<Vector<2 x CG2(?,?)>, CG1(?,?)>, R0(?,?), Mixed<
                             CG1(?,?), CG1(?,?)>, Vector<2 x CG1(?,?)>'
  Unique sub elements:       'Mixed<Vector<2 x CG2(?,?)>, CG1(?,?)>, R0(?,?), Mixed<
                             CG1(?,?), CG1(?,?)>, Vector<2 x CG1(?,?)>, Vector<2 x C
                             G2(?,?)>, CG1(?,?), CG2(?,?)'
  
  representation:    auto --> uflacs
  quadrature_rule:   auto --> default
  quadrature_degree: auto --> 6
  quadrature_degree: 6
  
Compiler stage 1 finished in 0.0126863 seconds.

Compiler stage 2: Computing intermediate representation
-------------------------------------------------------
  Computing representation of 0 elements
  Computing representation of 0 dofmaps
  Computing representation of 0 coordinate mappings
  Computing representation of integrals
  Computing uflacs representation
  Computing representation of forms
  
Compiler stage 2 finished in 0.0326278 seconds.

Compiler stage 3: Optimizing intermediate representation
--------------------------------------------------------
  Optimizing uflacs representation
  
Compiler stage 3 finished in 9.05991e-05 seconds.

Compiler stage 4: Generating code
---------------------------------
  Generating code for 0 finite_element(s)
  Generating code for 0 dofmap(s)
  Generating code for 0 coordinate_mapping(s)
  Generating code for integrals
  Generating code from ffc.uflacs representation
  Generating code for forms
  
Compiler stage 4 finished in 0.00771856 seconds.

Compiler stage 4.1 finished in 7.15256e-07 seconds.

Compiler stage 5: Formatting code
---------------------------------
  
Compiler stage 5 finished in 0.000184536 seconds.

FFC finished in 0.0534647 seconds.
Calling FFC just-in-time (JIT) compiler, this may take some time.
Compiling form ffc_form_9969380ccaca170aa1b0ad9dccae0f464901f792

Compiler stage 1: Analyzing form(s)
-----------------------------------
  
  Geometric dimension:       2
  Number of cell subdomains: 0
  Rank:                      1
  Arguments:                 '(v_0)'
  Number of coefficients:    3
  Coefficients:              '[f_22, f_25, f_28]'
  Unique elements:           'CG1(?,?), Mixed<CG1(?,?), CG1(?,?)>, Vector<2 x CG1(?,
                             ?)>'
  Unique sub elements:       'CG1(?,?), Mixed<CG1(?,?), CG1(?,?)>, Vector<2 x CG1(?,
                             ?)>'
  
  representation:    auto --> uflacs
  quadrature_rule:   auto --> default
  quadrature_degree: auto --> 5
  quadrature_degree: 5
  
Compiler stage 1 finished in 0.00326991 seconds.

Compiler stage 2: Computing intermediate representation
-------------------------------------------------------
  Computing representation of 0 elements
  Computing representation of 0 dofmaps
  Computing representation of 0 coordinate mappings
  Computing representation of integrals
  Computing uflacs representation
  Computing representation of forms
  
Compiler stage 2 finished in 0.00902271 seconds.

Compiler stage 3: Optimizing intermediate representation
--------------------------------------------------------
  Optimizing uflacs representation
  
Compiler stage 3 finished in 8.70228e-05 seconds.

Compiler stage 4: Generating code
---------------------------------
  Generating code for 0 finite_element(s)
  Generating code for 0 dofmap(s)
  Generating code for 0 coordinate_mapping(s)
  Generating code for integrals
  Generating code from ffc.uflacs representation
  Generating code for forms
  
Compiler stage 4 finished in 0.00207901 seconds.

Compiler stage 4.1 finished in 7.15256e-07 seconds.

Compiler stage 5: Formatting code
---------------------------------
  
Compiler stage 5 finished in 0.000189781 seconds.

FFC finished in 0.0148005 seconds.
Calling FFC just-in-time (JIT) compiler, this may take some time.
Compiling form ffc_form_df7237f1ae10cef974cf5d040654e40980633c0b

Compiler stage 1: Analyzing form(s)
-----------------------------------
Adjusting missing element cell to triangle.
Adjusting missing element cell to triangle.
Adjusting missing element cell to triangle.
Adjusting missing element cell to triangle.
Adjusting missing element cell to triangle.
Adjusting missing element cell to triangle.
  
  Geometric dimension:       2
  Number of cell subdomains: 0
  Rank:                      1
  Arguments:                 '(v_0)'
  Number of coefficients:    10
  Coefficients:              '[f_0, f_1, f_2, f_3, f_7, f_22, f_25, f_28, f_40, f_12
                             0]'
  Unique elements:           'Tensor<(2, 2) x CG1(?,?)>, R0(?,?), Mixed<CG1(?,?), CG
                             1(?,?)>, CG1(?,?), Mixed<Vector<2 x CG2(?,?)>, CG1(?,?)
                             >, Vector<2 x CG1(?,?)>'
  Unique sub elements:       'Tensor<(2, 2) x CG1(?,?)>, R0(?,?), Mixed<CG1(?,?), CG
                             1(?,?)>, CG1(?,?), Mixed<Vector<2 x CG2(?,?)>, CG1(?,?)
                             >, Vector<2 x CG1(?,?)>, Vector<2 x CG2(?,?)>, CG2(?,?)
                             '
  
  representation:    auto --> uflacs
  quadrature_rule:   auto --> default
  quadrature_degree: auto --> 9
  quadrature_degree: 9
  
Compiler stage 1 finished in 0.0167596 seconds.

Compiler stage 2: Computing intermediate representation
-------------------------------------------------------
  Computing representation of 0 elements
  Computing representation of 0 dofmaps
  Computing representation of 0 coordinate mappings
  Computing representation of integrals
  Computing uflacs representation
  Computing representation of forms
  
Compiler stage 2 finished in 0.0442162 seconds.

Compiler stage 3: Optimizing intermediate representation
--------------------------------------------------------
  Optimizing uflacs representation
  
Compiler stage 3 finished in 8.91685e-05 seconds.

Compiler stage 4: Generating code
---------------------------------
  Generating code for 0 finite_element(s)
  Generating code for 0 dofmap(s)
  Generating code for 0 coordinate_mapping(s)
  Generating code for integrals
  Generating code from ffc.uflacs representation
  Generating code for forms
  
Compiler stage 4 finished in 0.00619149 seconds.

Compiler stage 4.1 finished in 7.15256e-07 seconds.

Compiler stage 5: Formatting code
---------------------------------
  
Compiler stage 5 finished in 0.000184059 seconds.

FFC finished in 0.0675955 seconds.
Calling FFC just-in-time (JIT) compiler, this may take some time.
Compiling form ffc_form_13450991b7085b4d0778e02df03aa9eef18037ec

Compiler stage 1: Analyzing form(s)
-----------------------------------
  
  Geometric dimension:       2
  Number of cell subdomains: 0
  Rank:                      2
  Arguments:                 '(v_0, v_1)'
  Number of coefficients:    0
  Coefficients:              '[]'
  Unique elements:           'Tensor<(2, 2) x CG1(?,?)>, Vector<2 x CG1(?,?)>'
  Unique sub elements:       'Tensor<(2, 2) x CG1(?,?)>, Vector<2 x CG1(?,?)>, CG1(?
                             ,?)'
  
  representation:    auto --> uflacs
  quadrature_rule:   auto --> default
  quadrature_degree: auto --> 2
  quadrature_degree: 2
  
Compiler stage 1 finished in 0.00340939 seconds.

Compiler stage 2: Computing intermediate representation
-------------------------------------------------------
  Computing representation of 0 elements
  Computing representation of 0 dofmaps
  Computing representation of 0 coordinate mappings
  Computing representation of integrals
  Computing uflacs representation
  Computing representation of forms
  
Compiler stage 2 finished in 0.0110939 seconds.

Compiler stage 3: Optimizing intermediate representation
--------------------------------------------------------
  Optimizing uflacs representation
  
Compiler stage 3 finished in 9.10759e-05 seconds.

Compiler stage 4: Generating code
---------------------------------
  Generating code for 0 finite_element(s)
  Generating code for 0 dofmap(s)
  Generating code for 0 coordinate_mapping(s)
  Generating code for integrals
  Generating code from ffc.uflacs representation
  Generating code for forms
  
Compiler stage 4 finished in 0.00217986 seconds.

Compiler stage 4.1 finished in 7.15256e-07 seconds.

Compiler stage 5: Formatting code
---------------------------------
  
Compiler stage 5 finished in 0.000187874 seconds.

FFC finished in 0.0171204 seconds.
Calling FFC just-in-time (JIT) compiler, this may take some time.
Compiling form ffc_form_7c280469a4655d872031dd9b116f536f52ab0ce0

Compiler stage 1: Analyzing form(s)
-----------------------------------
Adjusting missing element cell to triangle.
Adjusting missing element cell to triangle.
Adjusting missing element cell to triangle.
Adjusting missing element cell to triangle.
Adjusting missing element cell to triangle.
Adjusting missing element cell to triangle.
Adjusting missing element cell to triangle.
  
  Geometric dimension:       2
  Number of cell subdomains: 0
  Rank:                      1
  Arguments:                 '(v_0)'
  Number of coefficients:    10
  Coefficients:              '[f_0, f_1, f_2, f_3, f_7, f_9, f_31, f_34, f_37, f_119
                             ]'
  Unique elements:           'Mixed<CG1(?,?), CG1(?,?)>, R0(?,?), CG1(?,?), Vector<2
                              x CG1(?,?)>'
  Unique sub elements:       'Mixed<CG1(?,?), CG1(?,?)>, R0(?,?), CG1(?,?), Vector<2
                              x CG1(?,?)>'
  
  representation:    auto --> uflacs
  quadrature_rule:   auto --> default
  quadrature_degree: auto --> 8
  quadrature_degree: 8
  
Compiler stage 1 finished in 0.0137668 seconds.

Compiler stage 2: Computing intermediate representation
-------------------------------------------------------
  Computing representation of 0 elements
  Computing representation of 0 dofmaps
  Computing representation of 0 coordinate mappings
  Computing representation of integrals
  Computing uflacs representation
  Computing representation of forms
  
Compiler stage 2 finished in 0.0255532 seconds.

Compiler stage 3: Optimizing intermediate representation
--------------------------------------------------------
  Optimizing uflacs representation
  
Compiler stage 3 finished in 9.91821e-05 seconds.

Compiler stage 4: Generating code
---------------------------------
  Generating code for 0 finite_element(s)
  Generating code for 0 dofmap(s)
  Generating code for 0 coordinate_mapping(s)
  Generating code for integrals
  Generating code from ffc.uflacs representation
  Generating code for forms
  
Compiler stage 4 finished in 0.00373554 seconds.

Compiler stage 4.1 finished in 7.15256e-07 seconds.

Compiler stage 5: Formatting code
---------------------------------
  
Compiler stage 5 finished in 0.000189781 seconds.

FFC finished in 0.043499 seconds.
Calling FFC just-in-time (JIT) compiler, this may take some time.
Compiling form ffc_form_88be4e5e2d9caebb18d7d020533c35d4396bda0e

Compiler stage 1: Analyzing form(s)
-----------------------------------
Adjusting missing element cell to triangle.
Adjusting missing element cell to triangle.
Adjusting missing element cell to triangle.
Adjusting missing element cell to triangle.
Adjusting missing element cell to triangle.
Adjusting missing element cell to triangle.
Adjusting missing element cell to triangle.
  
  Geometric dimension:       2
  Number of cell subdomains: 0
  Rank:                      2
  Arguments:                 '(v_0, v_1)'
  Number of coefficients:    11
  Coefficients:              '[f_0, f_2, f_4, f_5, f_6, f_7, f_9, f_31, f_34, f_37, 
                             f_40]'
  Unique elements:           'Mixed<CG1(?,?), CG1(?,?)>, R0(?,?), CG1(?,?), Mixed<Ve
                             ctor<2 x CG2(?,?)>, CG1(?,?)>, Vector<2 x CG1(?,?)>'
  Unique sub elements:       'Mixed<CG1(?,?), CG1(?,?)>, R0(?,?), CG1(?,?), Mixed<Ve
                             ctor<2 x CG2(?,?)>, CG1(?,?)>, Vector<2 x CG1(?,?)>, Ve
                             ctor<2 x CG2(?,?)>, CG2(?,?)'
  
  representation:    auto --> uflacs
  quadrature_rule:   auto --> default
  quadrature_degree: auto --> 10
  quadrature_degree: 10
  
Compiler stage 1 finished in 0.0136275 seconds.

Compiler stage 2: Computing intermediate representation
-------------------------------------------------------
  Computing representation of 0 elements
  Computing representation of 0 dofmaps
  Computing representation of 0 coordinate mappings
  Computing representation of integrals
  Computing uflacs representation
  Computing representation of forms
  
Compiler stage 2 finished in 0.0321157 seconds.

Compiler stage 3: Optimizing intermediate representation
--------------------------------------------------------
  Optimizing uflacs representation
  
Compiler stage 3 finished in 8.7738e-05 seconds.

Compiler stage 4: Generating code
---------------------------------
  Generating code for 0 finite_element(s)
  Generating code for 0 dofmap(s)
  Generating code for 0 coordinate_mapping(s)
  Generating code for integrals
  Generating code from ffc.uflacs representation
  Generating code for forms
  
Compiler stage 4 finished in 0.00684619 seconds.

Compiler stage 4.1 finished in 4.76837e-07 seconds.

Compiler stage 5: Formatting code
---------------------------------
  
Compiler stage 5 finished in 0.000190496 seconds.

FFC finished in 0.0530262 seconds.
Calling FFC just-in-time (JIT) compiler, this may take some time.
Compiling form ffc_form_2d77907768a59ab743915e266ca31da19d5e7d34

Compiler stage 1: Analyzing form(s)
-----------------------------------
Adjusting missing element cell to triangle.
Adjusting missing element cell to triangle.
Adjusting missing element cell to triangle.
Adjusting missing element cell to triangle.
Adjusting missing element cell to triangle.
  
  Geometric dimension:       2
  Number of cell subdomains: 0
  Rank:                      1
  Arguments:                 '(v_0)'
  Number of coefficients:    8
  Coefficients:              '[f_1, f_3, f_7, f_8, f_10, f_31, f_34, f_37]'
  Unique elements:           'CG1(?,?), R0(?,?), Mixed<CG1(?,?), CG1(?,?)>, Vector<2
                              x CG1(?,?)>'
  Unique sub elements:       'CG1(?,?), R0(?,?), Mixed<CG1(?,?), CG1(?,?)>, Vector<2
                              x CG1(?,?)>'
  
  representation:    auto --> uflacs
  quadrature_rule:   auto --> default
  quadrature_degree: auto --> 8
  quadrature_degree: 8
  
Compiler stage 1 finished in 0.010376 seconds.

Compiler stage 2: Computing intermediate representation
-------------------------------------------------------
  Computing representation of 0 elements
  Computing representation of 0 dofmaps
  Computing representation of 0 coordinate mappings
  Computing representation of integrals
  Computing uflacs representation
  Computing representation of forms
  
Compiler stage 2 finished in 0.0184786 seconds.

Compiler stage 3: Optimizing intermediate representation
--------------------------------------------------------
  Optimizing uflacs representation
  
Compiler stage 3 finished in 8.9407e-05 seconds.

Compiler stage 4: Generating code
---------------------------------
  Generating code for 0 finite_element(s)
  Generating code for 0 dofmap(s)
  Generating code for 0 coordinate_mapping(s)
  Generating code for integrals
  Generating code from ffc.uflacs representation
  Generating code for forms
  
Compiler stage 4 finished in 0.00376511 seconds.

Compiler stage 4.1 finished in 9.53674e-07 seconds.

Compiler stage 5: Formatting code
---------------------------------
  
Compiler stage 5 finished in 0.000184774 seconds.

FFC finished in 0.033047 seconds.
Calling FFC just-in-time (JIT) compiler, this may take some time.
Compiling form ffc_form_2cf4a25606c348aefba4c1b0075699077b6bc27d

Compiler stage 1: Analyzing form(s)
-----------------------------------
Adjusting missing element cell to triangle.
Adjusting missing element cell to triangle.
Adjusting missing element cell to triangle.
Adjusting missing element cell to triangle.
  
  Geometric dimension:       2
  Number of cell subdomains: 0
  Rank:                      2
  Arguments:                 '(v_0, v_1)'
  Number of coefficients:    6
  Coefficients:              '[f_3, f_7, f_8, f_10, f_31, f_40]'
  Unique elements:           'CG1(?,?), R0(?,?), Mixed<CG1(?,?), CG1(?,?)>, Mixed<Ve
                             ctor<2 x CG2(?,?)>, CG1(?,?)>, Vector<2 x CG1(?,?)>'
  Unique sub elements:       'CG1(?,?), R0(?,?), Mixed<CG1(?,?), CG1(?,?)>, Mixed<Ve
                             ctor<2 x CG2(?,?)>, CG1(?,?)>, Vector<2 x CG1(?,?)>, Ve
                             ctor<2 x CG2(?,?)>, CG2(?,?)'
  
  representation:    auto --> uflacs
  quadrature_rule:   auto --> default
  quadrature_degree: auto --> 4
  quadrature_degree: 4
  
Compiler stage 1 finished in 0.0102026 seconds.

Compiler stage 2: Computing intermediate representation
-------------------------------------------------------
  Computing representation of 0 elements
  Computing representation of 0 dofmaps
  Computing representation of 0 coordinate mappings
  Computing representation of integrals
  Computing uflacs representation
  Computing representation of forms
  
Compiler stage 2 finished in 0.0210752 seconds.

Compiler stage 3: Optimizing intermediate representation
--------------------------------------------------------
  Optimizing uflacs representation
  
Compiler stage 3 finished in 9.46522e-05 seconds.

Compiler stage 4: Generating code
---------------------------------
  Generating code for 0 finite_element(s)
  Generating code for 0 dofmap(s)
  Generating code for 0 coordinate_mapping(s)
  Generating code for integrals
  Generating code from ffc.uflacs representation
  Generating code for forms
  
Compiler stage 4 finished in 0.00345922 seconds.

Compiler stage 4.1 finished in 7.15256e-07 seconds.

Compiler stage 5: Formatting code
---------------------------------
  
Compiler stage 5 finished in 0.000192404 seconds.

FFC finished in 0.0351813 seconds.
Calling FFC just-in-time (JIT) compiler, this may take some time.
Compiling form ffc_form_511b12c5a73613a3045d70915ebdc3c51ead7edc

Compiler stage 1: Analyzing form(s)
-----------------------------------
Adjusting missing element cell to triangle.
Adjusting missing element cell to triangle.
Adjusting missing element cell to triangle.
Adjusting missing element cell to triangle.
Adjusting missing element cell to triangle.
  
  Geometric dimension:       2
  Number of cell subdomains: 0
  Rank:                      1
  Arguments:                 '(v_0)'
  Number of coefficients:    8
  Coefficients:              '[f_1, f_3, f_7, f_8, f_10, f_31, f_34, f_37]'
  Unique elements:           'CG1(?,?), R0(?,?), Mixed<CG1(?,?), CG1(?,?)>, Vector<2
                              x CG1(?,?)>'
  Unique sub elements:       'CG1(?,?), R0(?,?), Mixed<CG1(?,?), CG1(?,?)>, Vector<2
                              x CG1(?,?)>'
  
  representation:    auto --> uflacs
  quadrature_rule:   auto --> default
  quadrature_degree: auto --> 8
  quadrature_degree: 8
  
Compiler stage 1 finished in 0.0106106 seconds.

Compiler stage 2: Computing intermediate representation
-------------------------------------------------------
  Computing representation of 0 elements
  Computing representation of 0 dofmaps
  Computing representation of 0 coordinate mappings
  Computing representation of integrals
  Computing uflacs representation
  Computing representation of forms
  
Compiler stage 2 finished in 0.0184765 seconds.

Compiler stage 3: Optimizing intermediate representation
--------------------------------------------------------
  Optimizing uflacs representation
  
Compiler stage 3 finished in 8.72612e-05 seconds.

Compiler stage 4: Generating code
---------------------------------
  Generating code for 0 finite_element(s)
  Generating code for 0 dofmap(s)
  Generating code for 0 coordinate_mapping(s)
  Generating code for integrals
  Generating code from ffc.uflacs representation
  Generating code for forms
  
Compiler stage 4 finished in 0.00343871 seconds.

Compiler stage 4.1 finished in 9.53674e-07 seconds.

Compiler stage 5: Formatting code
---------------------------------
  
Compiler stage 5 finished in 0.000186205 seconds.

FFC finished in 0.0329521 seconds.
Calling FFC just-in-time (JIT) compiler, this may take some time.
Compiling form ffc_form_2844e6b1da5bc44eb132ad12aabb0705ffc6a927

Compiler stage 1: Analyzing form(s)
-----------------------------------
  
  Geometric dimension:       2
  Number of cell subdomains: 0
  Rank:                      0
  Arguments:                 '()'
  Number of coefficients:    3
  Coefficients:              '[f_22, f_25, f_40]'
  Unique elements:           'Mixed<CG1(?,?), CG1(?,?)>, CG1(?,?), Mixed<Vector<2 x 
                             CG2(?,?)>, CG1(?,?)>, Vector<2 x CG1(?,?)>'
  Unique sub elements:       'Mixed<CG1(?,?), CG1(?,?)>, CG1(?,?), Mixed<Vector<2 x 
                             CG2(?,?)>, CG1(?,?)>, Vector<2 x CG1(?,?)>, Vector<2 x 
                             CG2(?,?)>, CG2(?,?)'
  
  representation:    auto --> uflacs
  quadrature_rule:   auto --> default
  quadrature_degree: auto --> 4
  quadrature_degree: 4
  
Compiler stage 1 finished in 0.00321412 seconds.

Compiler stage 2: Computing intermediate representation
-------------------------------------------------------
  Computing representation of 0 elements
  Computing representation of 0 dofmaps
  Computing representation of 0 coordinate mappings
  Computing representation of integrals
  Computing uflacs representation
  Computing representation of forms
  
Compiler stage 2 finished in 0.0126042 seconds.

Compiler stage 3: Optimizing intermediate representation
--------------------------------------------------------
  Optimizing uflacs representation
  
Compiler stage 3 finished in 8.7738e-05 seconds.

Compiler stage 4: Generating code
---------------------------------
  Generating code for 0 finite_element(s)
  Generating code for 0 dofmap(s)
  Generating code for 0 coordinate_mapping(s)
  Generating code for integrals
  Generating code from ffc.uflacs representation
  Generating code for forms
  
Compiler stage 4 finished in 0.00226569 seconds.

Compiler stage 4.1 finished in 7.15256e-07 seconds.

Compiler stage 5: Formatting code
---------------------------------
  
Compiler stage 5 finished in 0.000190973 seconds.

FFC finished in 0.0185173 seconds.
Calling FFC just-in-time (JIT) compiler, this may take some time.
Compiling element ffc_element_f40b2f22dbe81821104ddec7b6637aca98f7b45e

Compiler stage 1: Analyzing element(s)
--------------------------------------
  
Compiler stage 1 finished in 7.86781e-05 seconds.

Compiler stage 2: Computing intermediate representation
-------------------------------------------------------
  Computing representation of 1 elements
  Computing representation of 1 dofmaps
  Computing representation of 0 coordinate mappings
  Computing representation of integrals
  Computing representation of forms
  
Compiler stage 2 finished in 0.000835896 seconds.

Compiler stage 3: Optimizing intermediate representation
--------------------------------------------------------
  Skipping optimizations, add -O or attach {'optimize': True} metadata to integrals
  
Compiler stage 3 finished in 8.10623e-05 seconds.

Compiler stage 4: Generating code
---------------------------------
  Generating code for 1 finite_element(s)
  Generating code for 1 dofmap(s)
  Generating code for 0 coordinate_mapping(s)
  Generating code for integrals
  Generating code for forms
  
Compiler stage 4 finished in 0.0199034 seconds.

Compiler stage 4.1 finished in 7.15256e-07 seconds.

Compiler stage 5: Formatting code
---------------------------------
  
Compiler stage 5 finished in 0.000218391 seconds.

FFC finished in 0.0212617 seconds.
Calling FFC just-in-time (JIT) compiler, this may take some time.
Compiling element ffc_element_0204bc2fdbb6551395b4421f17d78e427817d8bc

Compiler stage 1: Analyzing element(s)
--------------------------------------
  
Compiler stage 1 finished in 0.000100374 seconds.

Compiler stage 2: Computing intermediate representation
-------------------------------------------------------
  Computing representation of 1 elements
  Computing representation of 1 dofmaps
  Computing representation of 0 coordinate mappings
  Computing representation of integrals
  Computing representation of forms
  
Compiler stage 2 finished in 0.0013392 seconds.

Compiler stage 3: Optimizing intermediate representation
--------------------------------------------------------
  Skipping optimizations, add -O or attach {'optimize': True} metadata to integrals
  
Compiler stage 3 finished in 8.01086e-05 seconds.

Compiler stage 4: Generating code
---------------------------------
  Generating code for 1 finite_element(s)
  Generating code for 1 dofmap(s)
  Generating code for 0 coordinate_mapping(s)
  Generating code for integrals
  Generating code for forms
  
Compiler stage 4 finished in 0.034487 seconds.

Compiler stage 4.1 finished in 7.15256e-07 seconds.

Compiler stage 5: Formatting code
---------------------------------
  
Compiler stage 5 finished in 0.00027442 seconds.

FFC finished in 0.0364292 seconds.
Calling FFC just-in-time (JIT) compiler, this may take some time.
Compiling element ffc_element_772e1cb059fabd78c84a38e310a8fdd10d9966d4

Compiler stage 1: Analyzing element(s)
--------------------------------------
  
Compiler stage 1 finished in 0.000123024 seconds.

Compiler stage 2: Computing intermediate representation
-------------------------------------------------------
  Computing representation of 1 elements
  Computing representation of 1 dofmaps
  Computing representation of 0 coordinate mappings
  Computing representation of integrals
  Computing representation of forms
  
Compiler stage 2 finished in 0.00158119 seconds.

Compiler stage 3: Optimizing intermediate representation
--------------------------------------------------------
  Skipping optimizations, add -O or attach {'optimize': True} metadata to integrals
  
Compiler stage 3 finished in 8.34465e-05 seconds.

Compiler stage 4: Generating code
---------------------------------
  Generating code for 1 finite_element(s)
  Generating code for 1 dofmap(s)
  Generating code for 0 coordinate_mapping(s)
  Generating code for integrals
  Generating code for forms
  
Compiler stage 4 finished in 0.0398624 seconds.

Compiler stage 4.1 finished in 7.15256e-07 seconds.

Compiler stage 5: Formatting code
---------------------------------
  
Compiler stage 5 finished in 0.000270367 seconds.

FFC finished in 0.0420749 seconds.
Calling FFC just-in-time (JIT) compiler, this may take some time.
Compiling form ffc_form_17ac4f85b187505c5ac0ab66a9f8898cff2f3bca

Compiler stage 1: Analyzing form(s)
-----------------------------------
Adjusting missing element cell to triangle.
Adjusting missing element cell to triangle.
Adjusting missing element cell to triangle.
Adjusting missing element cell to triangle.
Adjusting missing element cell to triangle.
  
  Geometric dimension:       2
  Number of cell subdomains: 0
  Rank:                      0
  Arguments:                 '()'
  Number of coefficients:    8
  Coefficients:              '[f_0, f_4, f_5, f_6, f_7, f_22, f_25, f_28]'
  Unique elements:           'R0(?,?), Mixed<CG1(?,?), CG1(?,?)>, CG1(?,?), Vector<2
                              x CG1(?,?)>'
  Unique sub elements:       'R0(?,?), Mixed<CG1(?,?), CG1(?,?)>, CG1(?,?), Vector<2
                              x CG1(?,?)>'
  
  representation:    auto --> uflacs
  quadrature_rule:   auto --> default
  quadrature_degree: auto --> 11
  quadrature_degree: 11
  
Compiler stage 1 finished in 0.00756121 seconds.

Compiler stage 2: Computing intermediate representation
-------------------------------------------------------
  Computing representation of 0 elements
  Computing representation of 0 dofmaps
  Computing representation of 0 coordinate mappings
  Computing representation of integrals
  Computing uflacs representation
  Computing representation of forms
  
Compiler stage 2 finished in 0.0182557 seconds.

Compiler stage 3: Optimizing intermediate representation
--------------------------------------------------------
  Optimizing uflacs representation
  
Compiler stage 3 finished in 9.05991e-05 seconds.

Compiler stage 4: Generating code
---------------------------------
  Generating code for 0 finite_element(s)
  Generating code for 0 dofmap(s)
  Generating code for 0 coordinate_mapping(s)
  Generating code for integrals
  Generating code from ffc.uflacs representation
  Generating code for forms
  
Compiler stage 4 finished in 0.00369477 seconds.

Compiler stage 4.1 finished in 7.15256e-07 seconds.

Compiler stage 5: Formatting code
---------------------------------
  
Compiler stage 5 finished in 0.000189781 seconds.

FFC finished in 0.0299466 seconds.
Calling FFC just-in-time (JIT) compiler, this may take some time.
Compiling form ffc_form_94db13de079f949f9b59f6e53ff914aaddb19272

Compiler stage 1: Analyzing form(s)
-----------------------------------
Adjusting missing element cell to triangle.
Adjusting missing element cell to triangle.
Adjusting missing element cell to triangle.
Adjusting missing element cell to triangle.
Adjusting missing element cell to triangle.
  
  Geometric dimension:       2
  Number of cell subdomains: 0
  Rank:                      0
  Arguments:                 '()'
  Number of coefficients:    8
  Coefficients:              '[f_0, f_4, f_5, f_6, f_7, f_22, f_25, f_28]'
  Unique elements:           'R0(?,?), Mixed<CG1(?,?), CG1(?,?)>, CG1(?,?), Vector<2
                              x CG1(?,?)>'
  Unique sub elements:       'R0(?,?), Mixed<CG1(?,?), CG1(?,?)>, CG1(?,?), Vector<2
                              x CG1(?,?)>'
  
  representation:    auto --> uflacs
  quadrature_rule:   auto --> default
  quadrature_degree: auto --> 11
  quadrature_degree: 11
  
Compiler stage 1 finished in 0.00751925 seconds.

Compiler stage 2: Computing intermediate representation
-------------------------------------------------------
  Computing representation of 0 elements
  Computing representation of 0 dofmaps
  Computing representation of 0 coordinate mappings
  Computing representation of integrals
  Computing uflacs representation
  Computing representation of forms
  
Compiler stage 2 finished in 0.018168 seconds.

Compiler stage 3: Optimizing intermediate representation
--------------------------------------------------------
  Optimizing uflacs representation
  
Compiler stage 3 finished in 8.79765e-05 seconds.

Compiler stage 4: Generating code
---------------------------------
  Generating code for 0 finite_element(s)
  Generating code for 0 dofmap(s)
  Generating code for 0 coordinate_mapping(s)
  Generating code for integrals
  Generating code from ffc.uflacs representation
  Generating code for forms
  
Compiler stage 4 finished in 0.00343513 seconds.

Compiler stage 4.1 finished in 1.19209e-06 seconds.

Compiler stage 5: Formatting code
---------------------------------
  
Compiler stage 5 finished in 0.00019145 seconds.

FFC finished in 0.0295601 seconds.
Calling FFC just-in-time (JIT) compiler, this may take some time.
Compiling form ffc_form_6b5b2c861236427e5b89d2897eb67142e5eb8d32

Compiler stage 1: Analyzing form(s)
-----------------------------------
  
  Geometric dimension:       2
  Number of cell subdomains: 0
  Rank:                      2
  Arguments:                 '(v_0, v_1)'
  Number of coefficients:    0
  Coefficients:              '[]'
  Unique elements:           'CG1(?,?), Vector<2 x CG1(?,?)>'
  Unique sub elements:       'CG1(?,?), Vector<2 x CG1(?,?)>'
  
  representation:    auto --> uflacs
  quadrature_rule:   auto --> default
  quadrature_degree: auto --> 2
  quadrature_degree: 2
  
Compiler stage 1 finished in 0.0028398 seconds.

Compiler stage 2: Computing intermediate representation
-------------------------------------------------------
  Computing representation of 0 elements
  Computing representation of 0 dofmaps
  Computing representation of 0 coordinate mappings
  Computing representation of integrals
  Computing uflacs representation
  Computing representation of forms
  
Compiler stage 2 finished in 0.00766563 seconds.

Compiler stage 3: Optimizing intermediate representation
--------------------------------------------------------
  Optimizing uflacs representation
  
Compiler stage 3 finished in 9.2268e-05 seconds.

Compiler stage 4: Generating code
---------------------------------
  Generating code for 0 finite_element(s)
  Generating code for 0 dofmap(s)
  Generating code for 0 coordinate_mapping(s)
  Generating code for integrals
  Generating code from ffc.uflacs representation
  Generating code for forms
  
Compiler stage 4 finished in 0.00165629 seconds.

Compiler stage 4.1 finished in 7.15256e-07 seconds.

Compiler stage 5: Formatting code
---------------------------------
  
Compiler stage 5 finished in 0.000194311 seconds.

FFC finished in 0.0126054 seconds.
Calling FFC just-in-time (JIT) compiler, this may take some time.
Compiling form ffc_form_402917d6f0091c8e0e5453ac1055b986770332e9

Compiler stage 1: Analyzing form(s)
-----------------------------------
  
  Geometric dimension:       2
  Number of cell subdomains: 0
  Rank:                      1
  Arguments:                 '(v_0)'
  Number of coefficients:    1
  Coefficients:              '[f_22]'
  Unique elements:           'CG1(?,?), Mixed<CG1(?,?), CG1(?,?)>, Vector<2 x CG1(?,
                             ?)>'
  Unique sub elements:       'CG1(?,?), Mixed<CG1(?,?), CG1(?,?)>, Vector<2 x CG1(?,
                             ?)>'
  
  representation:    auto --> uflacs
  quadrature_rule:   auto --> default
  quadrature_degree: auto --> 2
  quadrature_degree: 2
  
Compiler stage 1 finished in 0.00283027 seconds.

Compiler stage 2: Computing intermediate representation
-------------------------------------------------------
  Computing representation of 0 elements
  Computing representation of 0 dofmaps
  Computing representation of 0 coordinate mappings
  Computing representation of integrals
  Computing uflacs representation
  Computing representation of forms
  
Compiler stage 2 finished in 0.00804877 seconds.

Compiler stage 3: Optimizing intermediate representation
--------------------------------------------------------
  Optimizing uflacs representation
  
Compiler stage 3 finished in 9.89437e-05 seconds.

Compiler stage 4: Generating code
---------------------------------
  Generating code for 0 finite_element(s)
  Generating code for 0 dofmap(s)
  Generating code for 0 coordinate_mapping(s)
  Generating code for integrals
  Generating code from ffc.uflacs representation
  Generating code for forms
  
Compiler stage 4 finished in 0.0018301 seconds.

Compiler stage 4.1 finished in 7.15256e-07 seconds.

Compiler stage 5: Formatting code
---------------------------------
  
Compiler stage 5 finished in 0.000200987 seconds.

FFC finished in 0.0131645 seconds.
